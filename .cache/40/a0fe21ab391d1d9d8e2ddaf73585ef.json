{"id":"src/data/teams.js","dependencies":[{"name":"/Users/tommylongpham/Github/fem-production-grade-ts/package.json","includedInParent":true,"mtime":1605819391797},{"name":"../utils/networking","loc":{"line":1,"column":24},"parent":"/Users/tommylongpham/Github/fem-production-grade-ts/src/data/teams.js","resolved":"/Users/tommylongpham/Github/fem-production-grade-ts/src/utils/networking.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAllTeams = getAllTeams;\nexports.getTeamById = getTeamById;\n\nvar _networking = require(\"../utils/networking\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar cachedAllTeamsList;\n\nfunction getAllTeams() {\n  return _getAllTeams.apply(this, arguments);\n}\n\nfunction _getAllTeams() {\n  _getAllTeams = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (typeof cachedAllTeamsList === 'undefined') cachedAllTeamsList = (0, _networking.apiCall)('teams');\n            _context.next = 3;\n            return cachedAllTeamsList;\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllTeams.apply(this, arguments);\n}\n\nvar cachedTeamRecords = {};\n\nfunction getTeamById(_x) {\n  return _getTeamById.apply(this, arguments);\n}\n\nfunction _getTeamById() {\n  _getTeamById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {\n    var cached;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cached = cachedTeamRecords[id];\n            if (typeof cached === 'undefined') cached = cachedTeamRecords[id] = (0, _networking.apiCall)(\"teams/\".concat(id));\n            _context2.next = 4;\n            return cached;\n\n          case 4:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getTeamById.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"src/data/teams.js","original":{"line":1,"column":0}},{"generated":{"line":15,"column":0},"source":"src/data/teams.js","original":{"line":3,"column":0}},{"name":"cachedAllTeamsList","generated":{"line":15,"column":4},"source":"src/data/teams.js","original":{"line":3,"column":4}},{"generated":{"line":15,"column":22},"source":"src/data/teams.js","original":{"line":3,"column":0}},{"name":"getAllTeams","generated":{"line":17,"column":9},"source":"src/data/teams.js","original":{"line":4,"column":22}},{"generated":{"line":22,"column":73},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":23,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":24,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":25,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":26,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":27,"column":0},"source":"src/data/teams.js","original":{"line":5,"column":2}},{"generated":{"line":27,"column":16},"source":"src/data/teams.js","original":{"line":5,"column":6}},{"name":"cachedAllTeamsList","generated":{"line":27,"column":23},"source":"src/data/teams.js","original":{"line":5,"column":13}},{"generated":{"line":27,"column":41},"source":"src/data/teams.js","original":{"line":5,"column":6}},{"generated":{"line":27,"column":46},"source":"src/data/teams.js","original":{"line":5,"column":36}},{"generated":{"line":27,"column":57},"source":"src/data/teams.js","original":{"line":5,"column":2}},{"name":"cachedAllTeamsList","generated":{"line":27,"column":59},"source":"src/data/teams.js","original":{"line":6,"column":4}},{"generated":{"line":27,"column":77},"source":"src/data/teams.js","original":{"line":6,"column":22}},{"generated":{"line":27,"column":80},"source":"src/data/teams.js","original":{"line":6,"column":25}},{"generated":{"line":27,"column":105},"source":"src/data/teams.js","original":{"line":6,"column":33}},{"generated":{"line":27,"column":112},"source":"src/data/teams.js","original":{"line":6,"column":25}},{"generated":{"line":27,"column":113},"source":"src/data/teams.js","original":{"line":6,"column":4}},{"generated":{"line":28,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":29,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"name":"cachedAllTeamsList","generated":{"line":29,"column":19},"source":"src/data/teams.js","original":{"line":8,"column":15}},{"generated":{"line":29,"column":37},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":31,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":32,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":34,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":35,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":36,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":37,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":38,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":39,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":40,"column":0},"source":"src/data/teams.js","original":{"line":4,"column":7}},{"generated":{"line":44,"column":0},"source":"src/data/teams.js","original":{"line":11,"column":0}},{"name":"cachedTeamRecords","generated":{"line":44,"column":4},"source":"src/data/teams.js","original":{"line":11,"column":6}},{"generated":{"line":44,"column":21},"source":"src/data/teams.js","original":{"line":11,"column":23}},{"generated":{"line":44,"column":24},"source":"src/data/teams.js","original":{"line":11,"column":26}},{"generated":{"line":44,"column":26},"source":"src/data/teams.js","original":{"line":11,"column":0}},{"name":"getTeamById","generated":{"line":46,"column":9},"source":"src/data/teams.js","original":{"line":13,"column":22}},{"generated":{"line":51,"column":73},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"name":"id","generated":{"line":51,"column":91},"source":"src/data/teams.js","original":{"line":13,"column":34}},{"generated":{"line":51,"column":93},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":52,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":53,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":54,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":55,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":56,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"name":"cached","generated":{"line":57,"column":0},"source":"src/data/teams.js","original":{"line":14,"column":6}},{"name":"cached","generated":{"line":57,"column":12},"source":"src/data/teams.js","original":{"line":14,"column":6}},{"generated":{"line":57,"column":18},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"name":"cachedTeamRecords","generated":{"line":57,"column":21},"source":"src/data/teams.js","original":{"line":14,"column":15}},{"generated":{"line":57,"column":38},"source":"src/data/teams.js","original":{"line":14,"column":32}},{"name":"id","generated":{"line":57,"column":39},"source":"src/data/teams.js","original":{"line":14,"column":33}},{"generated":{"line":57,"column":41},"source":"src/data/teams.js","original":{"line":14,"column":32}},{"generated":{"line":57,"column":42},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":58,"column":0},"source":"src/data/teams.js","original":{"line":15,"column":2}},{"generated":{"line":58,"column":16},"source":"src/data/teams.js","original":{"line":15,"column":6}},{"name":"cached","generated":{"line":58,"column":23},"source":"src/data/teams.js","original":{"line":15,"column":13}},{"generated":{"line":58,"column":29},"source":"src/data/teams.js","original":{"line":15,"column":6}},{"generated":{"line":58,"column":34},"source":"src/data/teams.js","original":{"line":15,"column":24}},{"generated":{"line":58,"column":45},"source":"src/data/teams.js","original":{"line":15,"column":2}},{"name":"cached","generated":{"line":58,"column":47},"source":"src/data/teams.js","original":{"line":16,"column":4}},{"generated":{"line":58,"column":53},"source":"src/data/teams.js","original":{"line":16,"column":10}},{"name":"cachedTeamRecords","generated":{"line":58,"column":56},"source":"src/data/teams.js","original":{"line":16,"column":13}},{"generated":{"line":58,"column":73},"source":"src/data/teams.js","original":{"line":16,"column":30}},{"name":"id","generated":{"line":58,"column":74},"source":"src/data/teams.js","original":{"line":16,"column":31}},{"generated":{"line":58,"column":76},"source":"src/data/teams.js","original":{"line":16,"column":30}},{"generated":{"line":58,"column":77},"source":"src/data/teams.js","original":{"line":16,"column":13}},{"generated":{"line":58,"column":80},"source":"src/data/teams.js","original":{"line":16,"column":37}},{"name":"id","generated":{"line":58,"column":121},"source":"src/data/teams.js","original":{"line":16,"column":54}},{"generated":{"line":58,"column":123},"source":"src/data/teams.js","original":{"line":16,"column":37}},{"generated":{"line":58,"column":125},"source":"src/data/teams.js","original":{"line":16,"column":4}},{"generated":{"line":59,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":60,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"name":"cached","generated":{"line":60,"column":19},"source":"src/data/teams.js","original":{"line":17,"column":15}},{"generated":{"line":60,"column":25},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":62,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":63,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":65,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":66,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":67,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":68,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":69,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":70,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}},{"generated":{"line":71,"column":0},"source":"src/data/teams.js","original":{"line":13,"column":7}}],"sources":{"src/data/teams.js":"import { apiCall } from '../utils/networking';\n\nlet cachedAllTeamsList;\nexport async function getAllTeams() {\n  if (typeof cachedAllTeamsList === 'undefined')\n    cachedAllTeamsList = apiCall('teams');\n\n  return await cachedAllTeamsList;\n}\n\nconst cachedTeamRecords = {};\n\nexport async function getTeamById(id) {\n  let cached = cachedTeamRecords[id];\n  if (typeof cached === 'undefined')\n    cached = cachedTeamRecords[id] = apiCall(`teams/${id}`);\n  return await cached;\n}\n"},"lineCount":null}},"error":null,"hash":"2fd19c05970349d0bcce4f7aa613fa0b","cacheData":{"env":{}}}